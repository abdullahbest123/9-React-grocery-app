{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","_ref","items","removeItem","editItem","React","createElement","className","map","item","id","title","key","type","onClick","FaEdit","FaTrash","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","concat","App","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","localStorage","getItem","JSON","parse","getLocalStorage","_useState4","setList","_useState5","_useState6","isEditing","setIsEditing","_useState7","_useState8","editID","setEditID","_useState9","show","_useState10","alert","setAlert","showAlert","arguments","length","undefined","setItem","stringify","onSubmit","e","preventDefault","_objectSpread","newItem","Date","getTime","toString","_toConsumableArray","Object","assign","placeholder","value","onChange","target","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ead195fb.chunk.js","sourcesContent":["import React from 'react';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nconst List = ({ items, removeItem, editItem }) => {\n  return (\n    <div className='grocery-list'>\n      {items.map((item) => {\n        const { id, title } = item;\n        return (\n          <article className='grocery-item' key={id}>\n            <p className='title'>{title}</p>\n            <div className='btn-container'>\n              <button\n                type='button'\n                className='edit-btn'\n                onClick={() => editItem(id)}\n              >\n                <FaEdit />\n              </button>\n              <button\n                type='button'\n                className='delete-btn'\n                onClick={() => removeItem(id)}\n              >\n                <FaTrash />\n              </button>\n            </div>\n          </article>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect } from 'react';\n\nconst Alert = ({ type, msg, removeAlert, list }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 3000);\n    return () => clearTimeout(timeout);\n  }, [list]);\n  return <p className={`alert alert-${type}`}>{msg}</p>;\n};\n\nexport default Alert;\n","import React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem('list')));\n  } else {\n    return [];\n  }\n};\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editID) {\n            return { ...item, title: name };\n          }\n          return item;\n        })\n      );\n      setName('');\n      setEditID(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'value changed');\n    } else {\n      showAlert(true, 'success', 'item added to the list');\n      const newItem = { id: new Date().getTime().toString(), title: name };\n\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({ show, type, msg });\n  };\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n  const removeItem = (id) => {\n    showAlert(true, 'danger', 'item removed');\n    setList(list.filter((item) => item.id !== id));\n  };\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(specificItem.title);\n  };\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list));\n  }, [list]);\n  return (\n    <section className='section-center'>\n      <form className='grocery-form' onSubmit={handleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n\n        <h3>grocery bud</h3>\n        <div className='form-control'>\n          <input\n            type='text'\n            className='grocery'\n            placeholder='e.g. eggs'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button type='submit' className='submit-btn'>\n            {isEditing ? 'edit' : 'submit'}\n          </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className='grocery-container'>\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <button className='clear-btn' onClick={clearList}>\n            clear items\n          </button>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}